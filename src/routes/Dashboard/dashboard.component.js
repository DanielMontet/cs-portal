var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useContext } from "react";
import { GlobalAppContext } from "../../types/props.types";
var Dashboard = function (props) {
    var meals = useContext(GlobalAppContext).meals;
    return (_jsxs("section", __assign({ className: "grid grid-rows-48 grid-cols-6 h-full gap-5" }, { children: [_jsx("header", __assign({ className: " row-span-2 sm:row-span-4 col-span-6" }, { children: _jsx("div", __assign({ className: "flex flex-row items-center px-5 py-4 bg-white rounded-lg shadow" }, { children: _jsxs("div", __assign({ className: "flex flex-row items-center" }, { children: [_jsx("label", __assign({ htmlFor: "kuneHubs", className: "mr-2" }, { children: "Filter by hub:" })), _jsxs("select", __assign({ className: "border border-slate-500 outline-0 focus:border-blue-700 text-slate-500 text-sm rounded-md p-2 bg-white", name: "hubs", id: "kuneHubs" }, { children: [_jsx("option", __assign({ className: "rounded-md", value: "All", selected: true }, { children: "ALL HUBS" })), _jsx("option", __assign({ value: "MAUA" }, { children: "MAUA" })), _jsx("option", __assign({ value: "CBD" }, { children: "CBD" })), _jsx("option", __assign({ value: "SAMEER" }, { children: "SAMEER" })), _jsx("option", __assign({ value: "THIKA ROAD" }, { children: "THIKA ROAD" }))] }))] })) })) })), _jsxs("section", __assign({ className: "row-span-47  sm:row-span-42 flex flex-col gap-5 col-span-6" }, { children: [_jsxs("div", __assign({ className: "grid sm:grid-cols-4 gap-5 mb-3" }, { children: [_jsxs("div", __assign({ className: "bg-primary text-white text-1xl fs rounded-lg h-32 p-5 flex flex-col gap-8" }, { children: [_jsx("h2", __assign({ className: "" }, { children: "Total Orders By Day" })), _jsx("span", __assign({ className: "text-2xl" }, { children: "0.00" }))] })), _jsxs("div", __assign({ className: "bg-secondary text-white rounded-lg h-32 p-5 shadow flex flex-col gap-8" }, { children: [_jsx("h2", __assign({ className: "" }, { children: "Avarage Orders Value By Day" })), _jsx("span", __assign({ className: "text-2xl" }, { children: "0.00" }))] })), _jsxs("div", __assign({ className: "bg-warning text-white rounded-lg h-32 p-5 shadow flex flex-col gap-8" }, { children: [_jsx("h2", __assign({ className: "" }, { children: "Revenue By Day" })), _jsx("span", __assign({ className: "text-2xl" }, { children: "0.00" }))] })), _jsxs("div", __assign({ className: "bg-dark text-white rounded-lg h-32 p-5 shadow flex flex-col gap-8" }, { children: [_jsx("h2", __assign({ className: "" }, { children: "Transactions By Day" })), _jsx("span", __assign({ className: "text-2xl" }, { children: "0.00" }))] }))] })), _jsxs("div", __assign({ className: "bg-white p-5 rounded-lg flex flex-col gap-4" }, { children: [_jsx("h2", __assign({ className: "mb-3" }, { children: "Meals of the day" })), _jsx("div", __assign({ className: "shadow overflow-x-scroll border-b border-gray-200 sm:rounded-lg" }, { children: _jsxs("table", __assign({ className: "min-w-full divide-y divide-gray-200" }, { children: [_jsx("thead", __assign({ className: "bg-gray-100" }, { children: _jsxs("tr", { children: [_jsx("th", __assign({ className: "px-6 py-3 text-left text-xs font-medium text-gray-900 uppercase tracking-wider", scope: "col" }, { children: "Title" })), _jsx("th", __assign({ className: "px-6 py-3 text-left text-xs font-medium text-gray-900 uppercase tracking-wider", scope: "col" }, { children: "Sold" })), _jsx("th", __assign({ className: "px-6 py-3 text-left text-xs font-medium text-gray-900 uppercase tracking-wider", scope: "col" }, { children: "Remaining" })), _jsx("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-900 uppercase tracking-wider", scope: "col" })] }) })), _jsx("tbody", __assign({ className: " divide-y divide-gray-200" }, { children: meals.map(function (meal, index) {
                                                return (_jsxs("tr", __assign({ className: "" }, { children: [_jsxs("td", __assign({ className: "flex items-center gap-3 my-3 pl-5" }, { children: [_jsx("img", { src: meal.img, className: "h-12 rounded-lg ", alt: "" }), _jsx("p", __assign({ className: "whitespace-nowrap text-sm text-gray-700" }, { children: meal.title }))] })), _jsx("td", __assign({ className: "px-6 py-4 whitespace-nowrap text-sm text-gray-500" }, { children: meal.sold })), _jsx("td", __assign({ className: "px-6 py-4 whitespace-nowrap text-sm text-gray-500" }, { children: meal.remaining }))] }), index));
                                            }) }))] })) }))] }))] }))] })));
};
export default Dashboard;
